# This workflow will build and test gbsplay in various configurations on Windows.

name: Windows Build

on:
  push:
  pull_request:
    types: [opened]
  schedule:
    - cron: '23 4 5 * *'

jobs:
  build-windows:
    name: Build and test on Windows

    runs-on: windows-latest

    strategy:
      matrix:
        type: [MINGW64]
        flags: ['LDFLAGS=-static']
        include:
          - type: MINGW64
            msystem: true
            packages: mingw-w64-x86_64-toolchain groff
            plugouts: dsound
            shell: msys2 {0}

    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
    - uses: actions/checkout@v4
    - if: ${{ matrix.msystem }}
      name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.type }}
        install: git base-devel ${{ matrix.packages }} zlib-devel dos2unix
        release: false
        update: false
    - name: Build and test
      env:
        CONFIGURE_FLAGS: ${{ matrix.flags }} --enable-verbosebuild --build=x86_64-w64-mingw32
      run: |
        make
    - name: Generate manpage
      run: |
        groff -man -Tascii man/gbsplay.1 > groff-nowidth.txt
        groff -man -Tutf8 man/gbsplay.1 > groff-utf8.txt
        groff -man -Tascii -rLL=100n man/gbsplay.1 > groff-plain.txt
        groff -man -Tascii -rLL=100n man/gbsplay.1 | col -bx > groff-col-bx.txt
        groff -man -Thtml man/gbsplay.1 > groff.html
        groff -man -Tpdf man/gbsplay.1 > groff.pdf
    - name: Generate manpage plan B
      run: |
        troff -man -Tascii man/gbsinfo.1   | grotty > troff-ascii.gbsinfo.txt
        troff -man -Tascii man/gbsplay.1   | grotty > troff-ascii.gbsplay.txt
        troff -man -Tascii man/gbsplayrc.5 | grotty > troff-ascii.gbsplayrc.txt
        cat COPYRIGHT > troff-ascii.COPYRIGHT.txt
        grep -v '^\[!\[' README.md > troff-ascii.README.txt
    - name: upload binary
      uses: actions/upload-artifact@v4
      with:
        name: gbsplay win exe
        path: gbsplay.exe
        if-no-files-found: error
        retention-days: 7 # this branch is for tests only, don't hog resources
        compression-level: 0 # we don't expect to be able to compress an .exe significantly
    - name: upload binary
      uses: actions/upload-artifact@v4
      with:
        name: gbsinfo win exe
        path: gbsinfo.exe
        if-no-files-found: error
        retention-days: 7 # this branch is for tests only, don't hog resources
        compression-level: 0 # we don't expect to be able to compress an .exe significantly
    - name: upload help text
      uses: actions/upload-artifact@v4
      with:
        name: groff manpages
        path: groff*
        if-no-files-found: error
        retention-days: 7 # this branch is for tests only, don't hog resources
        compression-level: 9 # we expect to be able to compress this plaintext significantly
    - name: upload help text
      uses: actions/upload-artifact@v4
      with:
        name: troff manpages
        path: troff*
        if-no-files-found: error
        retention-days: 7 # this branch is for tests only, don't hog resources
        compression-level: 9 # we expect to be able to compress this plaintext significantly
