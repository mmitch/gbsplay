# This workflow will build and test gbsplay in various configurations on Windows.

name: Windows Build

on:
  push:
  pull_request:
    types: [opened]
  schedule:
    - cron: '23 4 5 * *'

jobs:
  build-windows:
    name: Build and test on Windows

    runs-on: windows-latest

    strategy:
      matrix:
        type: [MSYS, UCRT64, MINGW64, MINGW32, CYGWIN]
        flags: ['', '--enable-sharedlibgbs']
        include:
          - type: MSYS
            msystem: true
            packages: gcc:p
            plugouts: dsound devdsp
            shell: msys2 {0}
          - type: UCRT64
            msystem: true
            packages: toolchain:p SDL2:p
            plugouts: dsound sdl
            shell: msys2 {0}
          - type: MINGW64
            msystem: true
            packages: toolchain:p SDL2:p
            plugouts: dsound sdl
            shell: msys2 {0}
          - type: MINGW32
            msystem: true
            packages: toolchain:p SDL2:p
            plugouts: dsound sdl
            shell: msys2 {0}
          - type: CYGWIN
            cygwin: true
            packages: gcc-core
            plugouts: dsound devdsp
            shell: C:\cygwin\bin\bash.exe -o igncr '{0}'

    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
    - uses: actions/checkout@v4
    - if: ${{ matrix.msystem }}
      name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.type }}
        install: git base-devel libintl gettext-devel zlib-devel
        pacboy: ${{ matrix.packages }}
        release: false
        update: false
    - if: ${{ matrix.cygwin }}
      name: Setup Cygwin
      uses: cygwin/cygwin-install-action@master
      with:
        packages: git make ${{ matrix.packages }} gettext-devel zlib-devel
    - if: ${{ matrix.cygwin }}
      name: Fix linefeeds under Cygwin
      run: |
        dos2unix Makefile configure *.sh
    - name: Build and test
      env:
        CONFIGURE_FLAGS: ${{ matrix.flags }} --enable-verbosebuild
      run: |
        make
    - name: Check activated plugouts
      run: |
        ./check_plugouts.sh ${{ matrix.plugouts }}
    - name: Check WAV plugout
      run: |
        ./check_plugout_wav.sh
    - name: Check build flags
      run: |
        ./check_buildflags.sh --disable-hardening ${{ matrix.flags }} --enable-verbosebuild
    - name: Dump configure on error
      if: ${{ failure() }}
      run: |
        bash -x -v configure && cat config.err
